name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci
          echo "Dependencies installed successfully"
          
      - name: Debug environment
        run: |
          echo "Node version:"
          node --version
          echo "NPM version:"
          npm --version
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          
      - name: Run linting
        run: npm run lint || true
        
      - name: Build
        run: |
          echo "Starting build process..."
          npm run build
          echo "Build process completed"
        
      - name: Debug build output
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Checking for dist directory:"
          if [ -d "dist" ]; then
            echo "dist directory exists"
            echo "Contents of dist directory:"
            ls -la dist/
          else
            echo "Error: dist directory not found"
            echo "Contents of current directory:"
            ls -la
            exit 1
          fi
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: dist/
          if-no-files-found: error # Will fail if no files are found
          retention-days: 1 # Only keep artifacts for 1 day to save space

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: dist/
          
      - name: Debug downloaded artifacts
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Checking downloaded artifacts:"
          if [ -d "dist" ]; then
            echo "dist directory exists"
            echo "Contents of dist directory:"
            ls -la dist/
            if [ -z "$(ls -A dist/)" ]; then
              echo "Error: dist directory is empty"
              exit 1
            fi
          else
            echo "Error: dist directory not found after download"
            exit 1
          fi
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: yourusername/ecommerce:latest
          
  deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to production
        run: |
          echo "Deploying to production environment"
          # Add your deployment script here
          # For example, SSH into your server and pull the latest Docker image
          # or update your Kubernetes deployment 